// Package docs Code generated by swaggo/swag at 2024-02-29 04:00:13.9616298 +0300 MSK m=+2.004874801. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "emma.idika@yahoo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/issues": {
            "get": {
                "description": "This endpoint gets all issues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Get all issues",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for reported_date",
                        "name": "reported_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for project_id",
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for assigned_to",
                        "name": "assigned_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (min 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (max 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by asc or desc order. Asc: id, title, reported_date, project_id, assigned_to, status, priority | Desc: -id, -title, -reported_date, -project_id, -assigned_to, -status, -priority",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Issue"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new issue with the request payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Create a new issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.createIssuePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Issue"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/issues/{issue_id}": {
            "get": {
                "description": "This endpoint gets an issue by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Get issue by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of issue to get",
                        "name": "issue_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Issue"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "This endpoint deletes an issue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Delete an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of issue to delete",
                        "name": "issue_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "This endpoint updates an issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issues"
                ],
                "summary": "Update an issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.updateIsssuePayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of issue to update",
                        "name": "issue_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Issue"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/issuesreport/assignee": {
            "get": {
                "description": "This endpoint gets report of issue assignees for a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issuesreport"
                ],
                "summary": "Get report of issue assignees for a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for project_id",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.IssuesAssignee"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/issuesreport/date": {
            "get": {
                "description": "This endpoint gets report of issue target date for a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issuesreport"
                ],
                "summary": "Get report of issues target date for a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for project_id",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.IssuesTargetDate"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/issuesreport/priority": {
            "get": {
                "description": "This endpoint gets report of issues priority level for a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issuesreport"
                ],
                "summary": "Get report of issues priority level for a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for project_id",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.IssuesPriority"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/issuesreport/reporter": {
            "get": {
                "description": "This endpoint gets report of issues reporter for a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issuesreport"
                ],
                "summary": "Get report of issues reporter for a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for project_id",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.IssuesReporter"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/issuesreport/status": {
            "get": {
                "description": "This endpoint gets report of issue status for a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issuesreport"
                ],
                "summary": "Get report of issue status for a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for project_id",
                        "name": "project_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.IssuesStatus"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/projects": {
            "get": {
                "description": "This endpoint gets all projects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get all projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for assigned_to",
                        "name": "assigned_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for start_Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for target_end_date",
                        "name": "target_end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for actual_end_date",
                        "name": "actual_end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for created_by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (min 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (max 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by asc or desc order. Asc: id, name, assigned_to, start_date, target_end_date, actual_end_date, created_by | Desc: -id, -name, -assigned_to, -start_date, -target_end_date, -actual_end_date, -created_by",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Project"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new project with the request payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.createProjectPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Project"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/projects/{project_id}": {
            "get": {
                "description": "This endpoint gets a project by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of project to get",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Project"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "This endpoint deletes a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of project to delete",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "This endpoint updates a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.updateProjectPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of project to update",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Project"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/projects/{project_id}/users": {
            "get": {
                "description": "This endpoint gets all project users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of project to get users",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (min 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (max 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by asc or desc order. Asc: id | Desc: -id",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/tokens/activation": {
            "post": {
                "description": "This endpoint creates a new activation token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Create a new activation token",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.createActivationTokenPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/tokens/authentication": {
            "post": {
                "description": "This endpoint creates JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Create JWT authentication token",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.createAuthenticationTokenPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "This endpoint gets all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (min 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (max 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by asc or desc order. Asc: id, name, email, created_on, modified_on | Desc: -id, -name, -email, -created_on, -modified_on",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new user with the request payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.createUserPayload"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/users/activated": {
            "put": {
                "description": "Activate a new user with the request payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Activate a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.activateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/users/{user_id}": {
            "get": {
                "description": "This endpoint gets a user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of user to get",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "This endpoint deletes a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of user to delete",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "This endpoint updates a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.updateUserPayload"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of user to update",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/users/{user_id}/projects": {
            "get": {
                "description": "This endpoint gets all projects for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all projects for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (min 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query string param for pagination (max 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by asc or desc order. Asc: id | Desc: -id",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_emzola_issuetracker_internal_model.User"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Assign a user to a project with the request payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Assign a user to a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.assignUserToProjectPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_emzola_issuetracker_internal_model.Issue": {
            "type": "object",
            "properties": {
                "actual_resolution_date": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_by": {
                    "type": "string"
                },
                "modified_on": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "reported_date": {
                    "type": "string"
                },
                "reporter_id": {
                    "type": "integer"
                },
                "resolution_summary": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_resolution_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.IssuesAssignee": {
            "type": "object",
            "properties": {
                "assignee_id": {
                    "type": "integer"
                },
                "assignee_name": {
                    "type": "string"
                },
                "issues_assigned": {
                    "type": "integer"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.IssuesPriority": {
            "type": "object",
            "properties": {
                "issue_priority": {
                    "type": "string"
                },
                "issues_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.IssuesReporter": {
            "type": "object",
            "properties": {
                "issues_reported": {
                    "type": "integer"
                },
                "reporter_id": {
                    "type": "integer"
                },
                "reporter_name": {
                    "type": "string"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.IssuesStatus": {
            "type": "object",
            "properties": {
                "issue_status": {
                    "type": "string"
                },
                "issues_count": {
                    "type": "integer"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.IssuesTargetDate": {
            "type": "object",
            "properties": {
                "issue_title": {
                    "type": "string"
                },
                "target_resolution_date": {
                    "type": "string"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.Project": {
            "type": "object",
            "properties": {
                "actual_end_date": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_by": {
                    "type": "string"
                },
                "modified_on": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "target_end_date": {
                    "type": "string"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "github_com_emzola_issuetracker_internal_model.User": {
            "type": "object",
            "properties": {
                "activated": {
                    "type": "boolean"
                },
                "created_by": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_by": {
                    "type": "string"
                },
                "modified_on": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.activateUserPayload": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.assignUserToProjectPayload": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer"
                }
            }
        },
        "internal_handler_http.createActivationTokenPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.createAuthenticationTokenPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.createIssuePayload": {
            "type": "object",
            "properties": {
                "assigned_to": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "target_resolution_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.createProjectPayload": {
            "type": "object",
            "properties": {
                "assigned_to": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "target_end_date": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.createUserPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.updateIsssuePayload": {
            "type": "object",
            "properties": {
                "actual_resolution_date": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "resolution_summary": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_resolution_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.updateProjectPayload": {
            "type": "object",
            "properties": {
                "actual_end_date": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "target_end_date": {
                    "type": "string"
                }
            }
        },
        "internal_handler_http.updateUserPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "https://issuetracker-api-dev.fl0.io",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Issue Tracker API",
	Description:      "This is an API service for an issue tracker.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
